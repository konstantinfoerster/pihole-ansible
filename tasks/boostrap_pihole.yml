---
- name: Print pihole version
  ansible.builtin.debug: msg="Install pihole version {{ pihole_tag }} with user {{ ansible_user }}"

- name: Add pihole user
  ansible.builtin.user:
    name: pihole
    system: true
    shell: /usr/sbin/nologin

- name: Ensure pihole directory exists
  ansible.builtin.file:
    path: /etc/pihole
    mode: "0775"
    owner: pihole
    group: pihole
    state: directory

- name: Path to pihole binary
  ansible.builtin.stat:
    path: /usr/local/bin/pihole
  register: pihole_binary

- name: Check if pihole is installed
  ansible.builtin.set_fact:
    pihole_installed: "{{ pihole_binary.stat.exists | default(false) }}"
    check_mode: false

- name: Copy pihole setupVars.conf
  ansible.builtin.template:
    src: setupVars.conf.j2
    dest: /etc/pihole/setupVars.conf
    owner: pihole
    group: pihole
    mode: 0644
  when: not pihole_installed

- name: Download pihole install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/pi-hole/pi-hole/{{ pihole_tag }}/automated%20install/basic-install.sh
    dest: ~/pihole-install.sh
    mode: u+rx
  when: not pihole_installed

- name: Run pihole install script
  ansible.builtin.command: ~/pihole-install.sh --unattended
  register: pihole_installer
  when: not pihole_installed

- name: Set initial pihole password
  ansible.builtin.command: "pihole -a -p {{ pihole_password }}"
  when: not pihole_installed

- name: "Display pihole installation result"
  ansible.builtin.debug: var=pihole_installer.stdout
  when: pihole_installer.stdout is defined

- name: Check if pihole is running
  ansible.builtin.uri:
    url: "http://localhost/admin/"
    status_code: 200
    return_content: true
  register: pihole_web
  failed_when: "'The Pi-hole Web interface is working!' not in pihole_web.x_pi_hole"
